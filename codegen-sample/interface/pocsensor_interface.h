/************************************************************************************************
 * This code was automatically generated by Digital Twin Code Generator tool 0.6.8.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 *
 * Generated Date: 3/23/2020
 ***********************************************************************************************/

#ifndef POCSENSOR_INTERFACE_H
#define POCSENSOR_INTERFACE_H

#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <string.h>
#include "digitaltwin_interface_client.h"
#include "../modellib/digitaltwin_serializer.h"

#ifdef __cplusplus
extern "C"
{
#endif

typedef enum POCSENSOR_TELEMETRY_TAG
{
    pocsensor_location_TELEMETRY
} POCSENSOR_TELEMETRY;

typedef enum POCSENSOR_READONLY_PROPERTY_TAG
{
    pocsensor_BATTERYREMAINING_PROPERTY,
    pocsensor_settings_PROPERTY
} POCSENSOR_PROPERTY;

// DigitalTwin interface name from service perspective.
static const char PocSensorInterfaceId[] = "urn:test:pocSensor:1";
static const char PocSensorInterfaceInstanceName[] = "pocsensor";

// Telemetry names for this interface.

static const char PocSensorInterface_LocationTelemetry[] = "location";

// Property names for this interface.

#define PocSensorInterface_BatteryRemainingProperty "battery_remaining"

#define PocSensorInterface_SettingsProperty "settings"

// Command names for this interface

#define PocSensorInterface_UpdateFirmwareCommand "updateFirmware"

// Methods
DIGITALTWIN_INTERFACE_CLIENT_HANDLE PocSensorInterface_Create();

void PocSensorInterface_Close(DIGITALTWIN_INTERFACE_CLIENT_HANDLE digitalTwinInterfaceClientHandle);

DIGITALTWIN_CLIENT_RESULT PocSensorInterface_Telemetry_SendAll();

DIGITALTWIN_CLIENT_RESULT PocSensorInterface_Property_ReportAll();

DIGITALTWIN_CLIENT_RESULT PocSensorInterface_Property_ReportBatteryRemaining();

#ifdef __cplusplus
}
#endif

#endif  // POCSENSOR_INTERFACE_H
